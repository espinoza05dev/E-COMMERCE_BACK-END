spring.application.name=Ecommerce-Back

spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/ecommerce}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.main.banner-mode=off
spring.jpa.hibernate.ddl-auto=update

logging.pattern.console=[%thread] %-5level: %logger - %msg%n
logging.level.root=ERROR
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR

#redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=6379
spring.session.store-type=redis
spring.session.redis.namespace=myapp:session
spring.session.timeout=30m
spring.main.allow-bean-definition-overriding=true

#JWT
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:}

#Stripe
#stripe.api.key=${STRIPE_API_KEY:}
#stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:}
#
#sendgris
#sendgrid.api.key=${SENDGRID_API_KEY:}
#
#cloudinary
#cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:}
#cloudinary.api_key=${CLOUDINARY_API_KEY:}
#cloudinary.api_secret=${CLOUDINARY_API_SECRET:}
#
# OAuth2 Google
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
#
# OAuth2 Facebook
#spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID:}
#spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET:}
